/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import model from "./PSP.glb";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF(model);
  return (
    <>
      <pointLight position={[-10, 10, 0]} intensity={1} />
      {/* <pointLight position={[10, 0, 0]} intensity={15} /> */}

      <group ref={group} {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BUS.geometry}
          material={nodes.BUS.material}
          position={[-0.18, -0.48, 0.32]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.boom.geometry}
            material={nodes.boom.material}
            position={[0.18, 0.49, 4.64]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.magnetometers.geometry}
              material={nodes.magnetometers.material}
              position={[0.02, -0.03, -0.2]}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.CoolingSystem.geometry}
            material={nodes.CoolingSystem.material}
            position={[0.18, 0.48, -0.33]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.CoolingSystem_frame.geometry}
            material={nodes.CoolingSystem_frame.material}
            position={[0.18, 0.48, -0.32]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.heatShield_Mounting.geometry}
            material={nodes.heatShield_Mounting.material}
            position={[0.17, 1.41, -1.66]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.vents.geometry}
            material={nodes.vents.material}
            position={[0.02, 0.41, 1.26]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.HGA.geometry}
            material={materials.foil_antenna}
          />
          <group position={[0.2, 0.63, -0.33]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cylinder128.geometry}
              material={nodes.Cylinder128.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cylinder128_1.geometry}
              material={materials.black_krinkle}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.solarWing_LeftBacking.geometry}
              material={nodes.solarWing_LeftBacking.material}
              position={[-1.63, 0.18, 0.01]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.solarWing_RightBacking.geometry}
              material={nodes.solarWing_RightBacking.material}
              position={[1.58, 0.18, 0.01]}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder053.geometry}
            material={materials.PSP}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder053_1.geometry}
            material={materials.shiny_panel}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.electricAntennas.geometry}
            material={nodes.electricAntennas.material}
            position={[0.95, -0.44, -1.57]}
          />
        </mesh>
      </group>
    </>
  );
}

useGLTF.preload(model);
