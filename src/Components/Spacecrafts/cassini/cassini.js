/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import model from "./Cassini.glb";
export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF(model);
  return (
    <>
      <pointLight position={[10, 20, 0]} intensity={5} />

      <group ref={group} {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes._root.geometry}
          material={materials.transparent}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.aluminum.geometry}
            material={nodes.aluminum.material}
            position={[-0.01, -2.44, -4.66]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.vents.geometry}
            material={materials.Vents}
            position={[0.52, 1.05, -0.9]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.black_krinkle.geometry}
            material={materials.black_krinkle}
            position={[-0.49, -0.74, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.BUS.geometry}
            material={nodes.BUS.material}
            position={[-1.35, 0.03, 0.01]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.foil_gold_h.geometry}
            material={nodes.foil_gold_h.material}
            position={[0.07, -0.72, -4.59]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.dish.geometry}
            material={nodes.dish.material}
            position={[0, 1.93, -0.1]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.plastic_white.geometry}
            material={nodes.plastic_white.material}
            position={[0, 1.14, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.foil_gold_2.geometry}
            material={materials.foil_gold_2}
            position={[0.07, 0.62, 0.06]}
          />
          <group position={[-0.28, -0.87, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh019.geometry}
              material={materials.plastic_dark}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh019_1.geometry}
              material={nodes.Mesh019_1.material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh019_2.geometry}
              material={materials["Material *"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh019_3.geometry}
              material={nodes.Mesh019_3.material}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.huygens_strip.geometry}
            material={nodes.huygens_strip.material}
            position={[-0.01, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.plastic_dark001.geometry}
            material={nodes.plastic_dark001.material}
            position={[-0.03, -2.69, 0.03]}
          />
        </mesh>
      </group>
    </>
  );
}

useGLTF.preload(model);
