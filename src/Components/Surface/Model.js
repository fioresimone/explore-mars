/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

import mod from "./1.gltf";

export default function Model(props) {
  const group = useRef();
  let { nodes, materials } = useGLTF(mod);

  /* nodes = Object.fromEntries(
    Object.entries(nodes).map((el) => {
      if (el[1].material) {
        el[1].material = new THREE.MeshStandardMaterial();
        el[1].material.wireframe = true;
      }
      return [el[0], el[1]];
    }),
  ); */

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
        position={[-13.19, 0.62, -10.33]}
        rotation={[0, -Math.PI / 8, 0]}
        scale={[1, 0.05, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere.geometry}
        material={nodes.Icosphere.material}
        position={[10.47, 0, 4.16]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[4.76, 0.54, -4.54]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[10.47, 0.62, -7.06]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.81, 0.6, 0.82]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
        position={[5.31, 0.4, 7.92]}
        rotation={[0, 0.68, 0]}
        scale={[3.91, -0.39, -0.29]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[10.43, 0.41, -2.4]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[3.91, -0.39, -0.29]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        position={[8.76, 0.29, -7.06]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.33, 0.29, 0.82]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere001.geometry}
        material={nodes.Icosphere001.material}
        position={[0.19, 0, 11.68]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        position={[-4.22, 0.39, 6.95]}
        rotation={[0, -0.8, 0]}
        scale={[3.91, -0.39, -0.29]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={nodes.Cube005.material}
        position={[-4.7, 0.62, 6.43]}
        rotation={[0, 0.75, 0]}
        scale={[0.81, 0.6, 0.82]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={nodes.Cylinder003.material}
        position={[-8.13, 0.54, 8.48]}
        rotation={[Math.PI, -1.26, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={nodes.Cube006.material}
        position={[-6.39, 0, -0.16]}
        rotation={[0, -0.77, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube007.geometry}
        material={nodes.Cube007.material}
        position={[3.87, 0, -12.57]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube008.geometry}
        material={nodes.Cube008.material}
        position={[-1.86, 0.29, -9.21]}
        scale={[1.24, 0.29, 0.49]}
      />
    </group>
  );
}

useGLTF.preload(mod);
