{"version":3,"file":"static/js/97.86a6bb75.chunk.js","mappings":"kNAQe,SAASA,EAAMC,GAC5B,IAAMC,GAAQC,EAAAA,EAAAA,UACd,GAA6BC,EAAAA,EAAAA,GAAQC,GAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACf,OACE,iCACE,uBAAYC,SAAU,CAAC,GAAI,GAAI,GAAIC,UAAW,KAE9C,kCAAOC,IAAKR,GAAWD,GAAvB,IAA8BU,QAAS,KAAvC,UACE,kBACEC,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMS,MAAMD,SACtBE,SAAUT,EAAUU,YAJtB,WAME,iBACEL,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMY,SAASJ,SACzBE,SAAUV,EAAMY,SAASF,SACzBR,SAAU,EAAE,KAAO,MAAO,SAE5B,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMa,MAAML,SACtBE,SAAUT,EAAUa,MACpBZ,SAAU,CAAC,IAAM,MAAO,OAE1B,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMe,cAAcP,SAC9BE,SAAUT,EAAUc,cACpBb,SAAU,EAAE,KAAO,IAAM,MAE3B,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMgB,IAAIR,SACpBE,SAAUV,EAAMgB,IAAIN,SACpBR,SAAU,EAAE,KAAM,IAAM,QAE1B,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMiB,YAAYT,SAC5BE,SAAUV,EAAMiB,YAAYP,SAC5BR,SAAU,CAAC,KAAO,KAAO,SAE3B,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMkB,KAAKV,SACrBE,SAAUV,EAAMkB,KAAKR,SACrBR,SAAU,CAAC,EAAG,MAAO,OAEvB,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMmB,cAAcX,SAC9BE,SAAUV,EAAMmB,cAAcT,SAC9BR,SAAU,CAAC,EAAG,KAAM,MAEtB,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMoB,YAAYZ,SAC5BE,SAAUT,EAAUmB,YACpBlB,SAAU,CAAC,IAAM,IAAM,QAEzB,mBAAOA,SAAU,EAAE,KAAO,IAAM,GAAhC,WACE,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMqB,QAAQb,SACxBE,SAAUT,EAAUqB,gBAEtB,iBACEhB,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMuB,UAAUf,SAC1BE,SAAUV,EAAMuB,UAAUb,YAE5B,iBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMwB,UAAUhB,SAC1BE,SAAUT,EAAU,iBAEtB,iBACEK,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAMyB,UAAUjB,SAC1BE,SAAUV,EAAMyB,UAAUf,eAG9B,iBACEJ,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAM0B,cAAclB,SAC9BE,SAAUV,EAAM0B,cAAchB,SAC9BR,SAAU,EAAE,IAAM,EAAG,MAEvB,iBACEI,YAAU,EACVC,eAAa,EACbC,SAAUR,EAAM2B,gBAAgBnB,SAChCE,SAAUV,EAAM2B,gBAAgBjB,SAChCR,SAAU,EAAE,KAAO,KAAM,gBAQrCJ,EAAAA,EAAAA,QAAgBC,I","sources":["Components/Spacecrafts/cassini/cassini.js"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\n\nimport model from \"./Cassini.glb\";\nexport default function Model(props) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(model);\n  return (\n    <>\n      <pointLight position={[10, 20, 0]} intensity={5} />\n\n      <group ref={group} {...props} dispose={null}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes._root.geometry}\n          material={materials.transparent}\n        >\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.aluminum.geometry}\n            material={nodes.aluminum.material}\n            position={[-0.01, -2.44, -4.66]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.vents.geometry}\n            material={materials.Vents}\n            position={[0.52, 1.05, -0.9]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.black_krinkle.geometry}\n            material={materials.black_krinkle}\n            position={[-0.49, -0.74, 0]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.BUS.geometry}\n            material={nodes.BUS.material}\n            position={[-1.35, 0.03, 0.01]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.foil_gold_h.geometry}\n            material={nodes.foil_gold_h.material}\n            position={[0.07, -0.72, -4.59]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.dish.geometry}\n            material={nodes.dish.material}\n            position={[0, 1.93, -0.1]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.plastic_white.geometry}\n            material={nodes.plastic_white.material}\n            position={[0, 1.14, 0]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.foil_gold_2.geometry}\n            material={materials.foil_gold_2}\n            position={[0.07, 0.62, 0.06]}\n          />\n          <group position={[-0.28, -0.87, 0]}>\n            <mesh\n              castShadow\n              receiveShadow\n              geometry={nodes.Mesh019.geometry}\n              material={materials.plastic_dark}\n            />\n            <mesh\n              castShadow\n              receiveShadow\n              geometry={nodes.Mesh019_1.geometry}\n              material={nodes.Mesh019_1.material}\n            />\n            <mesh\n              castShadow\n              receiveShadow\n              geometry={nodes.Mesh019_2.geometry}\n              material={materials[\"Material *\"]}\n            />\n            <mesh\n              castShadow\n              receiveShadow\n              geometry={nodes.Mesh019_3.geometry}\n              material={nodes.Mesh019_3.material}\n            />\n          </group>\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.huygens_strip.geometry}\n            material={nodes.huygens_strip.material}\n            position={[-0.01, 0, 0]}\n          />\n          <mesh\n            castShadow\n            receiveShadow\n            geometry={nodes.plastic_dark001.geometry}\n            material={nodes.plastic_dark001.material}\n            position={[-0.03, -2.69, 0.03]}\n          />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(model);\n"],"names":["Model","props","group","useRef","useGLTF","model","nodes","materials","position","intensity","ref","dispose","castShadow","receiveShadow","geometry","_root","material","transparent","aluminum","vents","Vents","black_krinkle","BUS","foil_gold_h","dish","plastic_white","foil_gold_2","Mesh019","plastic_dark","Mesh019_1","Mesh019_2","Mesh019_3","huygens_strip","plastic_dark001"],"sourceRoot":""}